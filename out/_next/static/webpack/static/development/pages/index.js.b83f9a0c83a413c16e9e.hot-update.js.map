{"version":3,"file":"static/webpack/static/development/pages/index.js.b83f9a0c83a413c16e9e.hot-update.js","sources":["webpack:///./components/SingleProject.jsx"],"sourcesContent":["import * as React from 'react';\nimport { ScaleLoader } from 'react-spinners';\nimport { Link, RichText } from 'prismic-reactjs';\nimport { Parallax } from 'react-scroll-parallax';\nimport Fade from 'react-reveal/Fade';\nimport SlideshowGallery from './SlideshowGallery';\n\nclass SingleProject extends React.Component {\n  openCollapse(e) {\n    this.funcName = 'openCollapse';\n    const content = e.target.previousElementSibling;\n    if (content.style.maxHeight) {\n      content.style.maxHeight = null;\n      e.target.value = 'More...';\n    } else {\n      content.style.maxHeight = `${content.scrollHeight}px`;\n      e.target.value = 'Less...';\n    }\n  }\n\n  render() {\n    const { content } = this.props;\n    const project = content.data;\n    let gradientBackground = {};\n\n    // BACKGROUND COLOR OF PROJECT WRAPPER\n    if (project) {\n      gradientBackground = {\n        backgroundColor: `${project.back_grad_color_2}`,\n        background: `linear-gradient(to right, ${project.back_grad_color_1}, ${project.back_grad_color_2})`,\n      };\n    }\n\n    return (\n      <React.Fragment>\n        {!project\n          ? (\n            /* SPINNER IF PROJECT IS LOADING */\n            <div className=\"spinner-container has-text-centered\">\n              <ScaleLoader\n                className=\"spinner\"\n                sizeUnit=\"px\"\n                size={120}\n                color=\"#4a4a4a\"\n              />\n            </div>\n          ) : (\n            <div className=\"container-wrapper\" style={gradientBackground}>\n              <div className=\"container sticky-container has-background-white\">\n                {/* GITHUB LINK */}\n                <a\n                  className=\"octocat-container image\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  href={Link.url(project.project_url)}\n                >\n                  <div className=\"octocat\" />\n                </a>\n                <div className=\"columns is-variable is-8\">\n                  {/* GALLERY COLUMN */}\n                  <div className=\"column is-three-fifths\">\n                    <div className=\"sticky-item\">\n                      <Parallax\n                        className=\"custom-class\"\n                        offsetXMax={80}\n                        offsetXMin={0}\n                        tag=\"figure\"\n                      >\n                        {/* PROJECT TITLE */}\n                        <span className=\"content\" style={{ color: `'${project.title_color}'` }}>{project.title[0].text}</span>\n                      </Parallax>\n                      {/* GALLLERY COMPONENT */}\n                      <SlideshowGallery\n                        images={[\n                          project.project_img_1.url,\n                          project.project_img_2.url,\n                          project.project_img_3.url,\n                          project.project_img_4.url,\n                          project.project_img_5.url,\n                          project.project_img_6.url,\n                        ]}\n                      />\n                    </div>\n                  </div>\n                  {/* DESCRIPTION COLUMN */}\n                  <div className=\"column is-two-fifths content\">\n                    <Fade bottom delay={500}>\n                      {/* PRISMIC CMS */}\n                      {RichText.render(project.description_overall)}\n                      {/* DESCRIPTION COLLAPSE CONTAINER */}\n                      <div className=\"content-collapse\">\n                        {/* PRISMIC CMS */}\n                        {RichText.render(project.description_collapse)}\n                      </div>\n                      <input\n                        className=\"button is-outlined has-text-weight-bold is-black\"\n                        type=\"button\"\n                        onClick={this.openCollapse.bind(this)}\n                        value=\"More...\"\n                      />\n                    </Fade>\n                  </div>\n                </div>\n              </div>\n            </div>\n          )\n        }\n        <style jsx>\n          {`\n          .spinner-container {\n            margin: 8rem 0;\n          }\n          .spinner {\n            display: block;\n            margin: 0 auto;\n            border-color: red;\n            text-align: center;\n          }\n          .sticky-container {\n              display: flex;\n              justify-content: center;\n              align-items: flex-start;\n              box-shadow:0 1rem 1rem -1rem rgba(10,10,10,.2);\n              border: 1px solid hsl(0, 0%, 86%);\n              padding: 2rem 2rem 4rem 2rem;\n              max-width: 1152px;\n            }\n            .content-collapse {\n              margin-bottom:1rem;\n              max-height: 0;\n              overflow: hidden;\n              -webkit-transition: max-height 300ms ease;\n              transition: max-height 300ms ease;\n            }\n            .container-wrapper {\n              padding-top: 9rem;\n              margin-bottom: -3rem;\n            }\n            .sticky-item {\n              position: -webkit-sticky;\n              position: sticky;\n              top: 15px;\n              margin-top: -100px;\n              z-index: 100 !important;\n            }\n            .octocat-container {\n              position: absolute;\n              z-index: 10;\n              bottom:1rem;\n              right: 1rem;\n            }\n            .octocat {\n              background: url('../static/github.png');\n              background-size: contain;\n              position:relative;\n              z-index: 10;\n              width:45px;\n              height:45px;\n              transition: all .3s ease-in-out;\n            }\n            .octocat:hover {\n              background: url('../static/octocat.png');\n              background-size: contain;\n              transform: scale(1.1);\n              transform: rotate(-360deg);\n              border-radius: 0%;\n              cursor: pointer;\n            }\n            @media screen and (max-width: 769px) {\n                .sticky-container {\n                    padding: 2rem 1rem 3rem 1rem;\n                }\n            }\n          `}\n        </style>\n      </React.Fragment>\n    );\n  }\n}\nexport default SingleProject;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAIA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAQA;AAAA;AAAA;AACA;AAAA;AAIA;AACA;AACA;AAJA;AAAA;AAMA;AAAA;AAEA;AAAA;AAEA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AAAA;AAAA;AAAA;AAAA;AAIA;AADA;AAaA;AAAA;AACA;AAAA;AAAA;AAIA;AAAA;AAMA;AACA;AACA;AAJA;AAAA;AA5DA;AAAA;AAAA;AA+IA;;;;AA1KA;AACA;AA2KA;;;;A","sourceRoot":""}